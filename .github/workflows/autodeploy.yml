name: Pages

on:
  push:
    branches:
      - master # default branch

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          token: ${{ secrets.ACCESS_TOKEN }}
          # If your repository depends on submodule, please see: https://github.com/actions/checkout
          submodules: recursive
      - name: Use Node.js 18.16
        uses: actions/setup-node@v2
        with:
          # Examples: 20, 18.19, >=16.20.2, lts/Iron, lts/Hydrogen, *, latest, current, node
          # Ref: https://github.com/actions/setup-node#supported-version-syntax
          node-version: "18.16"
      - name: Cache NPM dependencies
        uses: actions/cache@v2
        with:
          path: node_modules
          key: ${{ runner.OS }}-npm-cache
          restore-keys: |
            ${{ runner.OS }}-npm-cache
      - name: Install Dependencies
        run: npm install
      - name: Build
        run: npm run build
      - name: Upload Pages artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./public
  deploy:
    needs: build
    permissions:
      pages: write
      id-token: write
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

name: Deploy
on:
  push:
    branches: [ "master" ]
jobs:
  build:
    runs-on: ubuntu-latest
    name: 自动部署Hexo
    steps:
      - name: 检查分支
        uses: actions/checkout@v2
        with:
          ref: Hexo

      - name: 安装 Node.js
        uses: actions/setup-node@v3.8.1
        with:
          node-version: "18.x"

      - name: 安装 Hexo
        run: |
          npm install hexo-cli -g --save

      - name: 缓存 node-modules
        id: cache-npm
        uses: actions/cache@v3
        env:
          cache-name: cache-node-modules
        with:
          path: node_modules
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - name: 安装依赖
        # if: ${{ steps.cache-npm.outputs.cache-hit != 'true' }}
        run: |
          npm install --save

      - name: Replace secrets
        run: |
          sed -i 's/OAUTH_TOKEN/${{ secrets.ACCESS_TOKEN }}/' ./_config.butterfly.yml

      - name: 配置环境
        env:
          DEPLOY_KEY: ${{ secrets.DEPLOY_KEY }}
        run: |
          git config --global user.email "365855675@qq.com"
          git config --global user.name "a1173197570"
      - name: 部署 Hexo
        run: |
          hexo clean
          hexo d